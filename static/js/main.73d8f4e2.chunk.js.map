{"version":3,"sources":["components/Form/Form.module.css","components/PersonEditor/PersoneEditor.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-selectors.js","redux/contacts/actions.js","redux/contacts/contacts-operations.js","components/Form/Form.js","components/PersonEditor/PersonEditor.js","components/Filter/Filter.js","components/AppBar/Navigation.js","components/AppBar/UserMenu.js","components/AppBar/AuthNav.js","components/AppBar/AppBar.js","components/AppBar/LoginView.js","components/AppBar/RegisterView.js","components/AppBar/ContactsView.js","App.js","redux/contacts/contactsReduser.js","redux/store.js","index.js"],"names":["module","exports","getFilter","state","contacts","filter","contactsSelector","getItems","items","getVisibleContacts","createSelector","entities","allContacts","normalizedFilter","toLowerCase","entitie","name","includes","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","changeFilterContacts","fetchContactsRequest","fetchContactsSuccess","actions","fetchContactsError","url","operations","fetchContacts","dispatch","a","axios","get","data","addContact","number","contact","id","uuidv4","post","then","catch","error","deleteContact","contactId","delete","connect","contactSelector","onSubmit","useState","setName","setNumber","nameInputId","numberInputId","reset","className","s","form","e","preventDefault","find","user","alert","htmlFor","input","onChange","event","value","currentTarget","type","pattern","title","required","console","log","button","persons","onDeleteContacts","useDispatch","useEffect","length","stats","map","person","item","onClick","target","label","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isAuthenticated","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","onLogout","src","alt","width","AuthNav","header","justifyContent","borderBottom","AppBar","flexDirection","marginBottom","LoginView","email","password","handleChange","setState","handleSubmit","props","onLogin","this","autoComplete","Component","RegisterView","ContactsView","formSubmitHandler","addContacts","deleteContacts","path","component","createReducer","_","payload","isLoading","filterReducer","combineReducers","store","configureStore","reducer","contactsReducer","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73d8f4e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3Qb-D\",\"input\":\"Form_input__1Hfvc\",\"button\":\"Form_button__Rez1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"PersoneEditor_stats__2X8tI\",\"item\":\"PersoneEditor_item__WImEq\",\"button\":\"PersoneEditor_button__1diWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__RnXeK\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst getItems=state=>state.contacts.items;\r\nconst getFilter=state=>state.contacts.filter;\r\nconst getContacts=state=>state.contacts.items.entities\r\n\r\n/* const getVisibleContacts=state=>{\r\n    const filter=getFilter(state);\r\n    const allContacts=getContacts(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(entitie=>entitie.name.toLowerCase().includes(normalizedFilter))\r\n  } */\r\n\r\n   const getVisibleContacts=createSelector([getFilter,getContacts],(filter,allContacts)=>{\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(entitie=>entitie.name.toLowerCase().includes(normalizedFilter)) \r\n}) \r\n\r\nconst contactsSelector={getItems,getFilter,getVisibleContacts};\r\nexport default contactsSelector","\r\n\r\nimport { createAction} from '@reduxjs/toolkit'\r\n\r\nexport const addContactRequest = createAction('todos/addContactRequest');\r\nexport  const addContactSuccess=createAction('contacts/addContactSuccess')\r\nexport const addContactError = createAction('todos/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('todos/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('todos/deleteContactSuccess');\r\nexport const deleteContactError = createAction('todos/deleteContactError');\r\n\r\n const filterContacts=createAction('contacts/filter')\r\n/* const filterContacts=value=>({\r\n    type:types.FILTER,\r\n    payload: value\r\n\r\n}); */\r\n const changeFilterContacts=createAction('contacts/changeFilter')\r\n/* const changeFilterContacts=value=>({\r\n    type:types.CHANGE_FILTER,\r\n    payload: value\r\n\r\n}); */\r\n const fetchContactsRequest=createAction('contacts/fetchContactsRequest')\r\n const fetchContactsSuccess=createAction('contacts/fetchContactsRequest')\r\n const fetchContactsError=createAction('contacts/fetchContactsRequest')\r\n\r\n const actions={fetchContactsError,\r\n    fetchContactsSuccess,\r\n    fetchContactsRequest,\r\n    changeFilterContacts,\r\n    filterContacts,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError\r\n\r\n}\r\nexport default actions;","import a from '../contacts/actions'\r\nimport axios from 'axios'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst url='http://localhost:3002/contacts'\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(a.fetchContactsRequest());\r\n  \r\n\r\n  try {\r\n    const { data } = await axios.get(url);\r\n\r\n    dispatch(a.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(a.fetchContactsError(error));\r\n  } }\r\n\r\n  const addContact = ({name,number}) => dispatch => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name:name,\r\n      number:number,\r\n    };\r\n\r\n    \r\n\r\n    dispatch(a.addContactRequest());\r\n  \r\n    axios\r\n      .post(url, contact)\r\n      .then(({ data }) => dispatch(a.addContactSuccess(data)))\r\n      .catch(error => dispatch(a.addContactError(error)));\r\n  \r\n    \r\n  };\r\n  \r\n  const deleteContact = contactId => dispatch => {\r\n    dispatch(a.deleteContactRequest());\r\n  \r\n    axios\r\n      .delete(`${url}/${contactId}`)\r\n      .then(() => dispatch(a.deleteContactSuccess(contactId)))\r\n      .catch(error => dispatch(a.deleteContactError(error)));\r\n  };\r\n\r\nconst operations={fetchContacts,addContact,deleteContact}\r\n\r\nexport default operations;","import {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\nimport {connect} from 'react-redux';\r\nimport operations from '../../redux/contacts/contacts-operations';\r\nimport contactSelector from '../../redux/contacts/contacts-selectors'\r\n\r\n\r\n\r\n\r\n\r\nfunction Form({onSubmit,entities}){\r\n  const [name,setName]=useState('');\r\n  const [number,setNumber]=useState('');\r\n\r\n  const nameInputId=uuidv4();\r\n  const numberInputId=uuidv4();\r\n\r\n  const handelChangeName=(event)=>{\r\n    const {value}=event.currentTarget;  \r\n    setName(value);\r\n  \r\n  }\r\n\r\n  const handelChangeNumber=(e)=>{\r\n    console.log(e);\r\n    const {value}=e.currentTarget;  \r\n    setNumber(value);\r\n\r\n  }\r\n\r\n    const handelSubmit=e=>{\r\n    e.preventDefault();\r\n    const user = entities.find(user => user.name === name);\r\n    if (!user){\r\n      onSubmit({name,number});\r\n    reset()\r\n\r\n    } else \r\n    alert (`${name} is already on contacts`)\r\n    reset()\r\n  }\r\n\r\n  const reset=()=>{\r\n      setName('');\r\n      setNumber('');\r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={handelSubmit}>\r\n        <label htmlFor={nameInputId}> Name </label>\r\n        <input className={s.input}\r\n              id={nameInputId}\r\n              onChange={handelChangeName}\r\n              value={name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n        />\r\n       <label htmlFor={numberInputId}> Number </label>\r\n       <input className={s.input}\r\n              id={numberInputId}\r\n              onChange={handelChangeNumber}\r\n              value={number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n       />\r\n       <button className={s.button}type=\"submit\">Add contact</button>\r\n    </form>\r\n\r\n</>\r\n);}\r\n\r\nconst mapStateToProps=state=>({\r\n  entities:contactSelector.getVisibleContacts(state)\r\n})\r\nconst mapDispatchToProps=dispatch=>({\r\n  \r\n  onSubmit:data=>dispatch(operations.addContact(data))\r\n})\r\n\r\n  export default connect(mapStateToProps,mapDispatchToProps)(Form);","\r\nimport s from './PersoneEditor.module.css';\r\nimport {connect, useDispatch} from 'react-redux';\r\n//import actions from '../../redux/contacts/actions';\r\nimport { useEffect } from 'react';\r\nimport operations from '../../redux/contacts/contacts-operations';\r\nimport contactsSelector from '../../redux/contacts/contacts-selectors';\r\n\r\n\r\n\r\nfunction PersonEditor({persons,onDeleteContacts}){\r\n  const dispatch=useDispatch();\r\n  \r\n  \r\n  useEffect(()=>{\r\n    dispatch(operations.fetchContacts())\r\n  },[dispatch]) \r\n\r\n   \r\n    return  (  <>\r\n      \r\n      <div>{persons.length? \r\n              <ul className={s.stats}>{persons.map((person)=>\r\n                <li className={s.item} key={person.id}>{person.name}:{person.number}\r\n                <button className={s.button}\r\n                    type=\"button\"\r\n                    onClick={() => onDeleteContacts(person.id)}>Удалить\r\n                </button>\r\n                </li>)}\r\n              </ul> : <p>No entries in the phone book</p>}\r\n            </div>  \r\n   </> )\r\n}\r\n\r\n\r\n\r\n const mapStateToProps=state=>({\r\n persons:contactsSelector.getVisibleContacts(state),\r\n})\r\n\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    onDeleteContacts:(id)=>dispatch(operations.deleteContact(id))\r\n  }\r\n}\r\n      \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PersonEditor);\r\n","import React from 'react';\r\nimport s from './Filter.module.css'\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../redux/contacts/actions'\r\nimport contactsSelector from '../../redux/contacts/contacts-selectors';\r\n\r\n\r\n\r\nconst Filter =({value,onChange})=>(\r\n  <label className={s.label}><b>Фильтр по имени</b><input className={\r\n    s.input\r\n  } type=\"Text\" value={value} onChange={onChange}/></label>\r\n\r\n);\r\nconst mapStateToProps=state=>({\r\n  value:contactsSelector.getFilter(state)\r\n}) \r\nconst mapDispatchToProps=dispatch=>({\r\n  onChange:e=>dispatch(actions.changeFilterContacts(e.target.value))\r\n})       \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n//import { connect } from 'react-redux';\r\n//import { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n        <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >Ваши Контакты   \r\n      </NavLink>\r\n  </nav>\r\n);\r\n\r\n/* const mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation); */\r\nexport default Navigation;","import React from 'react';\r\n//import { connect } from 'react-redux';\r\n//import { authSelectors, authOperations } from '../../redux/auth';\r\n//import defaultAvatar from './default-avatar.png';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n/* const mapStateToProps = state => ({\r\n  name: authSelectors.getUsername(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu); */\r\nexport default UserMenu;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\n//import { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\n//import { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    <UserMenu />\r\n    <AuthNav />\r\n    {/* {isAuthenticated ? <UserMenu /> : <AuthNav />} */}\r\n  </header>\r\n);\r\n\r\n/* const mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar); */\r\nexport default AppBar;","import React, { Component } from 'react';\r\n//import { connect } from 'react-redux';\r\n//import { authOperations } from '../redux/auth';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nclass LoginView extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onLogin(this.state);\r\n\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Страница логина</h1>\r\n\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          style={styles.form}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label style={styles.label}>\r\n            Почта\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Войти</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* const mapDispatchToProps = {\r\n  onLogin: authOperations.logIn,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginView); */\r\nexport default LoginView;","import React, { Component } from 'react';\r\n//import { connect } from 'react-redux';\r\n//import { authOperations } from '../redux/auth';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nclass RegisterView extends Component {\r\n \r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Страница регистрации</h1>\r\n\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          style={styles.form}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label style={styles.label}>\r\n            Имя\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            Почта\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Зарегистрироваться</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* const mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView); */\r\nexport default RegisterView;","import React, { Component } from 'react';\r\n//import { connect } from 'react-redux';\r\n//import { authOperations } from '../redux/auth';\r\n\r\n\r\n\r\nclass ContactsView extends Component {\r\n \r\n\r\n  render() {\r\n    \r\n\r\n    return (\r\n      <div>\r\n       Контакты\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* const mapDispatchToProps = {\r\n  onLogin: authOperations.logIn,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginView); */\r\nexport default ContactsView;","\r\nimport contactsSelector from './redux/contacts/contacts-selectors'\r\nimport Form from \"./components/Form/Form\"\r\nimport PersonEditor from './components/PersonEditor/PersonEditor';\r\nimport Filter from './components/Filter/Filter';\r\nimport {connect} from 'react-redux'\r\nimport actions from './redux/contacts/actions';\r\nimport { Switch, Route} from 'react-router-dom';\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport LoginView from './components/AppBar/LoginView';\r\nimport RegisterView from './components/AppBar/RegisterView';\r\nimport ContactsView from './components/AppBar/ContactsView';\r\n\r\n\r\n\r\nfunction App({formSubmitHandler,getVisibleContacts,deleteContacts}){\r\n  \r\n  return(\r\n    <><AppBar/>\r\n    <Switch>\r\n      <Route exact path='/goit-react-hw-08-phonebook/register'component={RegisterView}/>\r\n      <Route exact path='/goit-react-hw-08-phonebook/login'component={LoginView}/>\r\n      <Route exact path='/goit-react-hw-08-phonebook/contacts'component={ContactsView}/>\r\n      <Route path=\"/goit-react-hw-08-phonebook\">\r\n      <h1>Phonebook</h1>\r\n      <Form/> \r\n      <Filter/>\r\n      <h2>Contacts</h2>\r\n      \r\n      <PersonEditor /> \r\n      </Route>\r\n      </Switch> \r\n    </>\r\n    \r\n)\r\n}\r\nconst mapStateToProps=state=>{\r\n  return {\r\n    items:contactsSelector.getItems(state),\r\n    filter:contactsSelector.getFilter(state)\r\n  }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    formSubmitHandler:value=> dispatch(actions.addContacts(value)),\r\n    getVisibleContacts:value=>dispatch(actions.filterContacts(value)),\r\n    deleteContacts:id=>dispatch(actions.deleteContacts(id)),\r\n    \r\n    \r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","import {combineReducers} from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport a from './actions';\r\n//import oper from './contacts-operations'\r\n\r\nconst entities=createReducer([], \r\n  {\r\n    [a.fetchContactsSuccess]:(_,{payload})=>payload,\r\n    [a.addContactSuccess]:(state,{payload})=>[...state,payload],\r\n    [a.deleteContactSuccess]:(state,{payload})=>state.filter(({ id }) => id !== payload),\r\n    /* [oper.addContact]:(state,{payload})=>{\r\n      const user = state.find(user => user.name === payload.name);\r\n      if (user){console.log(user);return [state]} return [...state,payload]\r\n    } */\r\n\r\n  })\r\nconst isLoading=createReducer(false,{\r\n  [a.fetchContactsRequest]: () => true,\r\n  [a.fetchContactsSuccess]: () => false,\r\n  [a.fetchContactsError]: () => false,\r\n  [a.addContactRequest]: () => true,\r\n  [a.addContactSuccess]: () => false,\r\n  [a.addContactError]: () => false,\r\n  [a.deleteContactRequest]: () => true,\r\n  [a.deleteContactSuccess]: () => false,\r\n  [a.deleteContactError]: () => false,\r\n\r\n\r\n})\r\n\r\nconst error = createReducer(null, {\r\n  [a.fetchContactsRequest]: () => null,\r\n  [a.fetchContactsError]: () => null,\r\n});\r\n\r\nconst filterReducer=createReducer('', {\r\n  [a.changeFilterContacts]:(_,{payload})=>payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items:combineReducers({\r\n      entities,\r\n      isLoading,\r\n      error\r\n    }),\r\n    filter:filterReducer,\r\n});","import { configureStore} from '@reduxjs/toolkit'\r\nimport contactsReducer from './contacts/contactsReduser';\r\n\r\n\r\n\r\n\r\n/* const rootReducer=combineReducers({\r\n    contacts:contactsReducer\r\n}) */  \r\nconst store=configureStore({\r\n    reducer:{\r\n        contacts:contactsReducer,\r\n    }\r\n})\r\n//const store=createStore(rootReducer,composeWithDevTools());\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport {Provider} from 'react-redux'\r\n\r\nconsole.log(store);\r\nconsole.log(store.getState());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}