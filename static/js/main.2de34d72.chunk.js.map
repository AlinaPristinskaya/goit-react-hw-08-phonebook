{"version":3,"sources":["components/LoginView/LoginView.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","components/PersonEditor/PersoneEditor.module.css","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","components/AuthNav/AuthNav.module.css","components/AppBar/AppBar.module.css","components/RegisterView/RegisterView.module.css","redux/contacts/contacts-selectors.js","redux/contacts/actions.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","redux/auth/auth-operations.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/LoginView/LoginView.js","components/RegisterView/RegisterView.js","components/Filter/Filter.js","redux/contacts/contacts-operations.js","components/Form/Form.js","components/PersonEditor/PersonEditor.js","components/ContactsView.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contactsReduser.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["module","exports","getFilter","state","contacts","filter","contactsSelector","getItems","items","getVisibleContacts","createSelector","entities","allContacts","normalizedFilter","toLowerCase","entitie","name","includes","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","changeFilterContacts","fetchContactsRequest","fetchContactsSuccess","actions","fetchContactsError","selectors","getIsLoggedIn","auth","isLoggedIn","getIsAuthenticated","isAuthenticated","getUsername","user","getIsRefreshing","isRefreshing","Navigation","useSelector","authSelectors","className","s","container","to","exact","h2","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","logIn","operations","logOut","getCurrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","get","UserMenu","dispatch","useDispatch","gradientButton","type","onClick","authOperations","AuthNav","navlinks","AppBar","header","mapDispatchToProps","onLogin","connect","useState","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","autoComplete","form","row","col25","label","col75","input","onChange","onRegister","setName","classNamr","class","fetchContacts","addContact","number","contact","id","uuidv4","then","catch","error","deleteContact","contactId","delete","contactSelector","setNumber","nameInputId","numberInputId","reset","style","find","alert","htmlFor","event","currentTarget","pattern","title","required","persons","onDeleteContacts","useEffect","length","map","person","contactsLi","span","ContactsView","contactsOperations","PrivateRoute","children","routeProps","PublicRoute","restricted","shoulRedirect","formSubmitHandler","addContacts","deleteContacts","path","createReducer","payload","isLoading","filterReducer","combineReducers","authSlice","createSlice","initialState","extraReducers","fulfilled","action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","storePersistor","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2de34d72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"LoginView_input__1rP-7\",\"container\":\"LoginView_container__3VLIR\",\"row\":\"LoginView_row__JOQGZ\",\"col25\":\"LoginView_col25__3MUvP\",\"col75\":\"LoginView_col75__3nmXB\",\"gradientButton\":\"LoginView_gradientButton__2yCIs\",\"form\":\"LoginView_form__1zswJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__1Hfvc\",\"container\":\"Form_container__395f-\",\"row\":\"Form_row__8AX5p\",\"col25\":\"Form_col25__2hRNs\",\"col75\":\"Form_col75__1DLPH\",\"label\":\"Form_label__2OhGT\",\"gradientButton\":\"Form_gradientButton__2sOgT\",\"form\":\"Form_form__3Qb-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3Rlgc\",\"container\":\"Filter_container__1BOqg\",\"row\":\"Filter_row__AHvio\",\"col25\":\"Filter_col25__22Yf_\",\"col75\":\"Filter_col75__u4rZo\",\"label\":\"Filter_label__RnXeK\",\"form\":\"Filter_form__2B-UA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"PersoneEditor_contacts__3f3wa\",\"span\":\"PersoneEditor_span__1lb5g\",\"contactsLi\":\"PersoneEditor_contactsLi__31K-8\",\"gradientButton\":\"PersoneEditor_gradientButton__3BSJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Navigation_h2__2wzoH\",\"container\":\"Navigation_container__23cGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3D097\",\"gradientButton\":\"UserMenu_gradientButton__1GUOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlinks\":\"AuthNav_navlinks__jBtpH\",\"active\":\"AuthNav_active__3xtYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__16l2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"RegisterView_input__2irEU\",\"container\":\"RegisterView_container__1kug8\",\"row\":\"RegisterView_row__2ojU6\",\"col25\":\"RegisterView_col25__1jVBw\",\"col75\":\"RegisterView_col75__2plSC\",\"label\":\"RegisterView_label__1NJpa\",\"gradientButton\":\"RegisterView_gradientButton__1JcRr\",\"form\":\"RegisterView_form__294VP\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst getItems=state=>state.contacts.items;\r\nconst getFilter=state=>state.contacts.filter;\r\nconst getContacts=state=>state.contacts.items.entities\r\n\r\n/* const getVisibleContacts=state=>{\r\n    const filter=getFilter(state);\r\n    const allContacts=getContacts(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(entitie=>entitie.name.toLowerCase().includes(normalizedFilter))\r\n  } */\r\n\r\n   const getVisibleContacts=createSelector([getFilter,getContacts],(filter,allContacts)=>{\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(entitie=>entitie.name.toLowerCase().includes(normalizedFilter)) \r\n}) \r\n\r\nconst contactsSelector={getItems,getFilter,getVisibleContacts};\r\nexport default contactsSelector","\r\n\r\nimport { createAction} from '@reduxjs/toolkit'\r\n\r\nexport const addContactRequest = createAction('todos/addContactRequest');\r\nexport  const addContactSuccess=createAction('contacts/addContactSuccess')\r\nexport const addContactError = createAction('todos/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('todos/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('todos/deleteContactSuccess');\r\nexport const deleteContactError = createAction('todos/deleteContactError');\r\n\r\n const filterContacts=createAction('contacts/filter')\r\n/* const filterContacts=value=>({\r\n    type:types.FILTER,\r\n    payload: value\r\n\r\n}); */\r\n const changeFilterContacts=createAction('contacts/changeFilter')\r\n/* const changeFilterContacts=value=>({\r\n    type:types.CHANGE_FILTER,\r\n    payload: value\r\n\r\n}); */\r\n const fetchContactsRequest=createAction('contacts/fetchContactsRequest')\r\n const fetchContactsSuccess=createAction('contacts/fetchContactsRequest')\r\n const fetchContactsError=createAction('contacts/fetchContactsRequest')\r\n\r\n const actions={fetchContactsError,\r\n    fetchContactsSuccess,\r\n    fetchContactsRequest,\r\n    changeFilterContacts,\r\n    filterContacts,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError\r\n\r\n}\r\nexport default actions;","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\nconst getIsLoggedIn=state=>state.auth.isLoggedIn;\r\nconst getIsRefreshing=state=>state.auth.isRefreshing\r\n\r\n\r\nconst selectors={\r\n    getIsLoggedIn,\r\n    getIsAuthenticated,\r\n    getUsername,\r\n    getIsRefreshing\r\n}\r\n\r\nexport default selectors ;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport  authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './Navigation.module.css'\r\n\r\n\r\n\r\nfunction Navigation(){\r\n  const isLoggedIn=useSelector(authSelectors.getIsLoggedIn)\r\n  return(\r\n         <nav className={s.container}>\r\n        {isLoggedIn && (\r\n        <NavLink to=\"/contacts\" exact>\r\n        <h2 className={s.h2}>Телефонная книга </h2>  \r\n        </NavLink>)}\r\n        </nav>\r\n  )\r\n \r\n}\r\n\r\n\r\nexport default Navigation;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = createAsyncThunk('auth/register', async credentials=>{\r\n  try {\r\n    const {data} = await axios.post('/users/signup', credentials);\r\n    token.set(data.token)\r\n    return data;\r\n    \r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n} );\r\n\r\n  \r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn= createAsyncThunk('auth/login', async credentials=>{\r\n\r\n  try {\r\n    const {data} = await axios.post('/users/login', credentials);\r\n    token.set(data.token)\r\n    return data;\r\n\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n});\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut =createAsyncThunk('auth/logout',async ()=>{\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    //dispatch(actions.logoutSuccess());\r\n  } catch (error) {\r\n    //dispatch(actions.logoutError(error.message));\r\n  }\r\n});\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser=createAsyncThunk('users/current',async(_,thunkAPI)=>{\r\nconst state=thunkAPI.getState();\r\nconst persistedToken= state.auth.token;\r\nif (persistedToken===null){\r\n   return thunkAPI.rejectWithValue();\r\n}\r\ntoken.set(persistedToken);\r\ntry{\r\n  const {data} = await axios.get('/users/current');\r\n  console.log(data);\r\n  return data\r\n}catch(error){\r\n  console.log(error)\r\n}\r\n\r\n});\r\n\r\n /*  token.set(persistedToken);\r\n  dispatch(actions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(actions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(actions.getCurrentUserError(error.message));\r\n  }\r\n; */\r\nconst operations={ register, logOut, logIn, getCurrentUser }\r\nexport default operations;","import React from 'react';\r\nimport {useDispatch, useSelector } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport s from './UserMenu.module.css';\r\n\r\n\r\n\r\nfunction UserMenu(){\r\n  const dispatch=useDispatch();\r\n  const name=useSelector(authSelectors.getUsername);\r\n return (\r\n    <div className={s.container}>\r\n    <span >Добро пожаловать, {name}</span>\r\n    <button className={s.gradientButton} type=\"button\" onClick={()=>dispatch(authOperations.logOut())}>\r\n      Выйти\r\n    </button>\r\n    </div>)\r\n}\r\n\r\nexport default UserMenu;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css'\r\n\r\n\r\n\r\n\r\nfunction AuthNav(){\r\n  return(\r\n          <div>\r\n          <NavLink to=\"/register\" exact className={s.navlinks}> Регистрация</NavLink>\r\n          <NavLink to=\"/login\"  className={s.navlinks}> Логин </NavLink>\r\n          </div>\r\n  )\r\n}\r\n \r\n\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport selectors from '../../redux/auth/auth-selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport s from './AppBar.module.css';\r\n\r\n\r\n\r\nconst AppBar = () => {\r\n  const isLoggedIn=useSelector(selectors.getIsLoggedIn)\r\nreturn(\r\n    <header className={s.header}>\r\n    <Navigation />\r\n    {isLoggedIn?<UserMenu />: <AuthNav />}    \r\n    </header>\r\n    )\r\n};\r\n\r\n\r\nexport default AppBar;\r\n","import React,{useState} from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport s from './LoginView.module.css'\r\n\r\n\r\nfunction LoginView(){\r\n  const dispatch=useDispatch();\r\n  const [email,setEmail]=useState('');\r\n  const [password,setPassword]=useState('');\r\n\r\n  const handleChange=({target:{name,value}})=>{\r\n    switch(name){\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;      \r\n    }\r\n  }\r\n\r\n  const handleSubmit=e=>{\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({email,password}));\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  return (\r\n      <div className={s.container}>\r\n        <h3>Войдите в свой аккаунт</h3>\r\n\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n          className={s.form}\r\n        > <div className={s.row}>\r\n          <div className={s.col25}>\r\n          <label className={s.label}>\r\n           \r\n            Почта\r\n            <div className={s.col75}>\r\n            <input\r\n              className={s.input}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            /></div>\r\n          </label></div></div>\r\n          <div className={s.row}>\r\n          <div className={s.col25}>\r\n\r\n          <label className={s.label}>\r\n            Пароль\r\n            <div className={s.col75}>\r\n            <input\r\n            className={s.input}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            /></div>\r\n          </label></div></div>\r\n\r\n          <button type=\"submit\" className={s.gradientButton}>Войти</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  onLogin: authOperations.logIn,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginView);\r\n","import React, { useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport s from './RegisterView.module.css'\r\n\r\n\r\n\r\nfunction RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <h3>Введите данные для регистрации</h3>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        autoComplete=\"off\"\r\n        className={s.form}\r\n      >\r\n        <div className={s.row}>\r\n          <div className={s.col25}>\r\n            <label className={s.label}>\r\n              Имя\r\n              <div className={s.col75}>\r\n                <input\r\n                  className={s.input}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={handleChange}\r\n                /></div>\r\n            </label></div></div>\r\n\r\n        <div className={s.row}>\r\n          <div className={s.col25}>\r\n            <label className={s.label}>\r\n              Почта\r\n              <div className={s.col75}>\r\n                <input\r\n                  className={s.input}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleChange}\r\n\r\n                /></div>\r\n            </label></div></div>\r\n\r\n        <div className={s.row}>\r\n          <div classNamr={s.col25}>\r\n            <label className={s.label}>\r\n              Пароль\r\n              <div className={s.col75}>\r\n                <input\r\n                  className={s.input}\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={handleChange}\r\n\r\n                /></div>\r\n            </label></div></div>\r\n\r\n        <button type=\"submit\" className={s.gradientButton}>Зарегистрироваться</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n","import React from 'react';\r\nimport s from './Filter.module.css'\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../redux/contacts/actions'\r\nimport contactsSelector from '../../redux/contacts/contacts-selectors';\r\n\r\n\r\n\r\nconst Filter =({value,onChange})=>(\r\n  <div className={s.container}>\r\n  <div className={s.form}><div className={s.row}>\r\n  <div class={s.col25}>\r\n  <label className={s.label}><b>Поиск контакта по имени</b><div className={s.col75}><input className={\r\n    s.input\r\n  } type=\"Text\" value={value} onChange={onChange}/></div></label></div></div></div></div>\r\n\r\n);\r\nconst mapStateToProps=state=>({\r\n  value:contactsSelector.getFilter(state)\r\n}) \r\nconst mapDispatchToProps=dispatch=>({\r\n  onChange:e=>dispatch(actions.changeFilterContacts(e.target.value))\r\n})       \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);","import a from '../contacts/actions'\r\nimport axios from 'axios'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(a.fetchContactsRequest());\r\n  \r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(a.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(a.fetchContactsError(error));\r\n  } }\r\n\r\n  const addContact = ({name,number}) => dispatch => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name:name,\r\n      number:number,\r\n    };\r\n\r\n    \r\n\r\n    dispatch(a.addContactRequest());\r\n  \r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(a.addContactSuccess(data)))\r\n      .catch(error => dispatch(a.addContactError(error)));\r\n  \r\n    \r\n  };\r\n  \r\n  const deleteContact = contactId => dispatch => {\r\n    dispatch(a.deleteContactRequest());\r\n  \r\n    axios\r\n      .delete(`/contacts/${contactId}`)\r\n      .then(() => dispatch(a.deleteContactSuccess(contactId)))\r\n      .catch(error => dispatch(a.deleteContactError(error)));\r\n  };\r\n\r\nconst operations={fetchContacts,addContact,deleteContact}\r\n\r\nexport default operations;","import {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {connect} from 'react-redux';\r\nimport operations from '../../redux/contacts/contacts-operations';\r\nimport contactSelector from '../../redux/contacts/contacts-selectors'\r\nimport style from './Form.module.css';\r\n\r\n\r\n\r\n\r\nfunction Form({onSubmit,entities}){\r\n  const [name,setName]=useState('');\r\n  const [number,setNumber]=useState('');\r\n\r\n  const nameInputId=uuidv4();\r\n  const numberInputId=uuidv4();\r\n\r\n  const handelChangeName=(event)=>{\r\n    const {value}=event.currentTarget;  \r\n    setName(value);\r\n  \r\n  }\r\n\r\n  const handelChangeNumber=(e)=>{\r\n    console.log(e);\r\n    const {value}=e.currentTarget;  \r\n    setNumber(value);\r\n\r\n  }\r\n\r\n    const handelSubmit=e=>{\r\n    e.preventDefault();\r\n    const user = entities.find(user => user.name === name);\r\n    if (!user){\r\n      onSubmit({name,number});\r\n    reset()\r\n\r\n    } else \r\n    alert (`${name} is already on contacts`)\r\n    reset()\r\n  }\r\n\r\n  const reset=()=>{\r\n      setName('');\r\n      setNumber('');\r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n    <div className={style.container}>\r\n    <h3>Добавить контакт в телефонную книгу</h3>\r\n      <form className={style.form} onSubmit={handelSubmit}>\r\n      <div className={style.row}>\r\n        <div className={style.col25}>\r\n        <label htmlFor={nameInputId}> Имя </label></div></div>\r\n        <div className={style.col75}>\r\n        <input className={style.input}\r\n              id={nameInputId}\r\n              onChange={handelChangeName}\r\n              value={name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n        /></div>\r\n\r\n       <label htmlFor={numberInputId}> Номер </label>\r\n       <input className={style.input}\r\n              id={numberInputId}\r\n              onChange={handelChangeNumber}\r\n              value={number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n       />\r\n       <button className={style.gradientButton}type=\"submit\">Добавить</button>\r\n    </form></div>\r\n\r\n</>\r\n);}\r\n\r\nconst mapStateToProps=state=>({\r\n  entities:contactSelector.getVisibleContacts(state)\r\n})\r\nconst mapDispatchToProps=dispatch=>({\r\n  \r\n  onSubmit:data=>dispatch(operations.addContact(data))\r\n})\r\n\r\n  export default connect(mapStateToProps,mapDispatchToProps)(Form);","\r\nimport s from './PersoneEditor.module.css';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport operations from '../../redux/contacts/contacts-operations';\r\nimport contactsSelector from '../../redux/contacts/contacts-selectors';\r\n\r\n\r\n\r\nfunction PersonEditor({persons,onDeleteContacts}){\r\n  const dispatch=useDispatch();\r\n  \r\n  \r\n  useEffect(()=>{\r\n    dispatch(operations.fetchContacts())\r\n  },[dispatch]) \r\n\r\n   \r\n    return  ( \r\n   <>      \r\n      <div className={s.contacts}>{persons.length? \r\n      <ul className={s.contacts}>{persons.map((person)=>\r\n      <li className={s.contactsLi} key={person.id}>\r\n      <span className={s.span}>{person.name}:{person.number}</span>\r\n      <button className={s.gradientButton} type=\"button\"onClick={() => onDeleteContacts(person.id)}>Удалить </button>\r\n      </li>)}\r\n      </ul> : <p>В вашей телефонной книге пока нет записей</p>}\r\n      </div>  \r\n   </> )\r\n}\r\n\r\n\r\n\r\n const mapStateToProps=state=>({\r\n persons:contactsSelector.getVisibleContacts(state),\r\n})\r\n\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    onDeleteContacts:(id)=>dispatch(operations.deleteContact(id))\r\n  }\r\n}\r\n      \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PersonEditor);\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch} from 'react-redux';\r\nimport Filter from './Filter/Filter';\r\nimport Form from './Form/Form';\r\nimport PersonEditor from './PersonEditor/PersonEditor';\r\n//import authSelectors from '../../redux/auth/auth-selectors';\r\nimport contactsOperations from '../redux/contacts/contacts-operations'\r\n\r\nfunction ContactsView(){\r\n     const dispatch=useDispatch();\r\n     \r\n     useEffect(()=>dispatch(contactsOperations.fetchContacts()),[dispatch]);\r\n return (<>\r\n      <Form/> \r\n      <Filter/>\r\n      <PersonEditor /> \r\n      </>)\r\n\r\n\r\n\r\n }\r\n\r\n\r\n\r\nexport default ContactsView;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {  useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nfunction PrivateRoute({children,...routeProps}){\r\n  const isLoggedIn=useSelector(authSelectors.getIsLoggedIn)\r\n  return <Route {...routeProps}>{\r\n    isLoggedIn?children:<Redirect to =\"/login\"/>}</Route>\r\n} \r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nfunction PublicRoute({\r\n  children,\r\n  restricted=false,\r\n  ...routeProps}){\r\n  const isLoggedIn=useSelector(authSelectors.getIsLoggedIn);\r\n  const shoulRedirect=isLoggedIn&&restricted\r\n  return<Route {...routeProps}>{shoulRedirect?<Redirect to=\"/contacts\"/>:children}</Route>\r\n}\r\n\r\nexport default PublicRoute;","\r\nimport contactsSelector from './redux/contacts/contacts-selectors'\r\nimport {connect, useDispatch, useSelector} from 'react-redux'\r\nimport actions from './redux/contacts/actions';\r\nimport { Switch } from 'react-router-dom';\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport LoginView from './components/LoginView/LoginView';\r\nimport RegisterView from './components/RegisterView/RegisterView';\r\nimport ContactsView from './components/ContactsView';\r\nimport { useEffect } from 'react';\r\nimport operations from './redux/auth/auth-operations'\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport authSelectors from './redux/auth/auth-selectors';\r\n\r\n\r\n\r\n\r\n\r\nfunction App({formSubmitHandler,getVisibleContacts,deleteContacts}){\r\n  const dispatch= useDispatch();\r\n  const isRefreshing=useSelector(authSelectors.getIsRefreshing);\r\n  useEffect(()=>{dispatch(operations.getCurrentUser())},\r\n  [dispatch]);\r\n  return(\r\n    !isRefreshing &&\r\n    <><AppBar/>\r\n      <Switch>\r\n       <PublicRoute exact path='/register' restricted><RegisterView/></PublicRoute>\r\n       <PublicRoute  path='/login' restricted><LoginView/></PublicRoute>           \r\n       <PrivateRoute path='/contacts'><ContactsView/></PrivateRoute>\r\n       </Switch> \r\n    </>\r\n    \r\n)\r\n}\r\nconst mapStateToProps=state=>{\r\n  return {\r\n    items:contactsSelector.getItems(state),\r\n    filter:contactsSelector.getFilter(state)\r\n  }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    formSubmitHandler:value=> dispatch(actions.addContacts(value)),\r\n    getVisibleContacts:value=>dispatch(actions.filterContacts(value)),\r\n    deleteContacts:id=>dispatch(actions.deleteContacts(id)),\r\n    \r\n    \r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","import {combineReducers} from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport a from './actions';\r\n//import oper from './contacts-operations'\r\n\r\nconst entities=createReducer([], \r\n  {\r\n    [a.fetchContactsSuccess]:(_,{payload})=>payload,\r\n    [a.addContactSuccess]:(state,{payload})=>[...state,payload],\r\n    [a.deleteContactSuccess]:(state,{payload})=>state.filter(({ id }) => id !== payload),\r\n    /* [oper.addContact]:(state,{payload})=>{\r\n      const user = state.find(user => user.name === payload.name);\r\n      if (user){console.log(user);return [state]} return [...state,payload]\r\n    } */\r\n\r\n  })\r\nconst isLoading=createReducer(false,{\r\n  [a.fetchContactsRequest]: () => true,\r\n  [a.fetchContactsSuccess]: () => false,\r\n  [a.fetchContactsError]: () => false,\r\n  [a.addContactRequest]: () => true,\r\n  [a.addContactSuccess]: () => false,\r\n  [a.addContactError]: () => false,\r\n  [a.deleteContactRequest]: () => true,\r\n  [a.deleteContactSuccess]: () => false,\r\n  [a.deleteContactError]: () => false,\r\n\r\n\r\n})\r\n\r\nconst error = createReducer(null, {\r\n  [a.fetchContactsRequest]: () => null,\r\n  [a.fetchContactsError]: () => null,\r\n});\r\n\r\nconst filterReducer=createReducer('', {\r\n  [a.changeFilterContacts]:(_,{payload})=>payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items:combineReducers({\r\n      entities,\r\n      isLoading,\r\n      error\r\n    }),\r\n    filter:filterReducer,\r\n});","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport authOperations from './auth-operations'\r\nconst initialState={\r\n    user:{name:null, email:null},\r\n    token:null,\r\n    isLoggedIn:false,\r\n    isRefreshing:false\r\n     \r\n};\r\nconst authSlice=createSlice({\r\n    name:'auth',\r\n    initialState,\r\n    extraReducers:{\r\n        [authOperations.register.fulfilled](state,action){\r\n            state.user=action.payload.user;\r\n            state.token=action.payload.token;\r\n            state.isLoggedIn=true;\r\n\r\n        },\r\n        [authOperations.logIn.fulfilled](state,action){\r\n            state.user=action.payload.user;\r\n            state.token=action.payload.token;\r\n            state.isLoggedIn=true;\r\n\r\n        },\r\n        [authOperations.logOut.fulfilled](state){\r\n            state.user={name:null, email:null};\r\n            state.token=null;\r\n            state.isLoggedIn=false;\r\n\r\n        },\r\n        [authOperations.getCurrentUser.pending](state,action){\r\n            state.isRefreshing=true;\r\n        },\r\n        [authOperations.getCurrentUser.fulfilled](state,action){\r\n            state.user={...action.payload};\r\n            state.isLoggedIn=true;\r\n            state.isRefreshing=false;\r\n        },[authOperations.getCurrentUser.rejected](state,action){\r\n            state.isRefreshing=false;\r\n        }\r\n    },\r\n});\r\nexport default authSlice.reducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport  contactsReducer from './contacts/contactsReduser';\r\nimport  authReducer from './auth/auth-slice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nconst storePersistor={ store, persistor }\r\nexport default storePersistor;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport s from './redux/store'\r\nimport {Provider} from 'react-redux'\r\n\r\nconsole.log(s.store);\r\nconsole.log(s.store.getState());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={s.store}>\r\n    <PersistGate loading={null} persistor={s.persistor}>\r\n      <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n    </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}